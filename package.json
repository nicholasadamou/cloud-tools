{
  "name": "cloud-tools-monorepo",
  "version": "1.0.0",
  "private": true,
  "engines": {
    "node": ">=20.x",
    "pnpm": ">=8.0.0"
  },
  "workspaces": [
    "client",
    "infrastructure/modules/lambda/src"
  ],
  "dependencies": {
    "@aws-sdk/client-dynamodb": "^3.873.0",
    "@aws-sdk/client-s3": "^3.873.0",
    "@aws-sdk/client-sqs": "^3.873.0",
    "@aws-sdk/lib-dynamodb": "^3.873.0",
    "dotenv": "^17.2.1",
    "fluent-ffmpeg-7": "^2.1.5",
    "node-calibre": "^2.1.1",
    "pdf-lib": "^1.17.1",
    "sharp": "^0.34.3"
  },
  "scripts": {
    "dev": "pnpm --filter client dev",
    "build": "pnpm --filter client build",
    "start": "pnpm --filter client start",
    "lint": "pnpm --filter client lint",
    "test": "pnpm --filter client test",
    "test:run": "pnpm --filter client test:run",
    "test:coverage": "pnpm --filter client test:coverage",
    "test:ui": "pnpm --filter client test:ui",
    "test:watch": "pnpm --filter client test:watch",
    "worker": "tsx scripts/worker.ts",
    "setup": "./scripts/setup.sh",
    "verify": "./scripts/verify-setup.sh",
    "localstack:start": "./scripts/localstack.sh start",
    "localstack:stop": "./scripts/localstack.sh stop",
    "localstack:restart": "./scripts/localstack.sh restart",
    "localstack:status": "./scripts/localstack.sh status",
    "localstack:logs": "./scripts/localstack.sh logs",
    "localstack:reset": "./scripts/localstack.sh reset",
    "localstack:health": "./scripts/localstack.sh health",
    "test:integration": "./scripts/test-integration.sh",
    "type-check": "pnpm --filter client type-check",
    "type-check:all": "pnpm type-check && pnpm lambda:type-check",
    "lambda:type-check": "pnpm --filter @cloud-tools/lambda type-check",
    "lambda:build": "pnpm --filter @cloud-tools/lambda build",
    "lambda:clean": "pnpm --filter @cloud-tools/lambda clean",
    "lambda:build:shell": "./scripts/build-lambda.sh",
    "lambda:lint": "eslint infrastructure/modules/lambda/lambda-templates/*.js",
    "lambda:lint:fix": "eslint infrastructure/modules/lambda/lambda-templates/*.js --fix",
    "build:all": "pnpm build && pnpm --filter @cloud-tools/lambda build",
    "format:check": "prettier --check .",
    "format": "prettier --write .",
    "client:install": "pnpm --filter client install",
    "client:clean": "pnpm --filter client clean",
    "act": "act",
    "act:list": "act --list",
    "act:ci": "act -W .github/workflows/ci.yml",
    "act:ci:lint": "act -W .github/workflows/ci.yml -j lint-and-format",
    "act:ci:type-check": "act -W .github/workflows/ci.yml -j type-check",
    "act:ci:test": "act -W .github/workflows/ci.yml -j test",
    "act:ci:build": "act -W .github/workflows/ci.yml -j build",
    "act:ci:security": "act -W .github/workflows/ci.yml -j security",
    "act:ci:summary": "act -W .github/workflows/ci.yml -j summary",
    "act:test": "act -W .github/workflows/test.yml",
    "act:coverage": "act -W .github/workflows/coverage.yml",
    "act:coverage:report": "act -W .github/workflows/coverage.yml -j coverage",
    "act:coverage:compare": "act -W .github/workflows/coverage.yml -j coverage-comparison",
    "act:envs": "act -W .github/workflows/test-environments.yml",
    "act:envs:matrix": "act -W .github/workflows/test-environments.yml -j test-matrix",
    "act:envs:localstack": "act -W .github/workflows/test-environments.yml -j test-with-localstack",
    "act:envs:docker": "act -W .github/workflows/test-environments.yml -j test-docker",
    "act:envs:perf": "act -W .github/workflows/test-environments.yml -j performance-tests",
    "act:all": "act -W .github/workflows/ci.yml && act -W .github/workflows/test.yml && act -W .github/workflows/coverage.yml",
    "act:quick": "act -W .github/workflows/ci.yml -j type-check",
    "act:full": "act -W .github/workflows/ci.yml -j test",
    "act:verbose": "act -W .github/workflows/ci.yml --verbose",
    "act:dry": "act -W .github/workflows/ci.yml --dryrun",
    "act:local": "act -W .github/workflows/ci.yml -j test --container-architecture linux/amd64",
    "act:menu": "./scripts/act-runner.sh",
    "act:shellcheck": "act -W .github/workflows/shellcheck.yml",
    "act:shellcheck:basic": "act -W .github/workflows/shellcheck.yml -j shellcheck",
    "act:shellcheck:detailed": "act -W .github/workflows/shellcheck.yml -j shellcheck-detailed",
    "act:shellcheck:security": "act -W .github/workflows/shellcheck.yml -j security-scan",
    "act:ci:shellcheck": "act -W .github/workflows/ci.yml -j shellcheck",
    "act:terraform": "act -W .github/workflows/terraform-lint.yml",
    "act:terraform:fmt": "act -W .github/workflows/terraform-lint.yml -j terraform-fmt",
    "act:terraform:validate": "act -W .github/workflows/terraform-lint.yml -j terraform-validate",
    "act:terraform:lint": "act -W .github/workflows/terraform-lint.yml -j tflint",
    "act:terraform:security": "act -W .github/workflows/terraform-lint.yml -j terraform-security",
    "act:terraform:docs": "act -W .github/workflows/terraform-lint.yml -j terraform-docs",
    "shellcheck": "shellcheck scripts/*.sh infrastructure/scripts/*.sh",
    "shellcheck:strict": "shellcheck -S style scripts/*.sh infrastructure/scripts/*.sh",
    "terraform:fmt": "terraform fmt -recursive infrastructure/",
    "terraform:fmt:check": "terraform fmt -check -recursive infrastructure/",
    "terraform:validate": "cd infrastructure/environments/dev && terraform init -backend=false && terraform validate",
    "terraform:validate:prod": "cd infrastructure/environments/production && terraform init -backend=false && terraform validate",
    "terraform:lint": "cd infrastructure && tflint --recursive",
    "terraform:lint:init": "cd infrastructure && tflint --init",
    "terraform:docs": "terraform-docs markdown table --recursive --output-file README.md infrastructure/modules/",
    "terraform:all": "pnpm run terraform:fmt && pnpm run terraform:validate && pnpm run terraform:lint",
    "terraform:lint:local": "./infrastructure/scripts/lint.sh --all",
    "terraform:fmt:local": "./infrastructure/scripts/lint.sh --format",
    "pre-commit:run": "pre-commit run --all-files",
    "pre-commit:install": "pre-commit install",
    "prepare": "command -v pre-commit >/dev/null 2>&1 && pre-commit install || echo 'pre-commit not found, skipping installation (this is normal in CI environments)'"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.34.0",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^14.3.1",
    "@testing-library/user-event": "^14.6.1",
    "@types/aws-lambda": "^8.10.152",
    "@types/fluent-ffmpeg": "^2.1.27",
    "@types/node": "22.10.4",
    "@types/react": "^18.3.24",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "eslint": "^8.57.1",
    "eslint-config-next": "^15.5.0",
    "eslint-config-prettier": "^10.1.8",
    "jsdom": "^23.2.0",
    "prettier": "^3.6.2",
    "tsx": "^4.20.5",
    "typescript": "5.7.2",
    "vitest": "^3.2.4"
  }
}
